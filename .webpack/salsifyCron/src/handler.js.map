{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"envdotjs\"","webpack:///external \"source-map-support/register\"","webpack:///external \"mongoose\"","webpack:///./models/Sheet.js","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///./utils/db.js","webpack:///external \"middy/middlewares\"","webpack:///external \"middy\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///external \"babel-runtime/core-js/json/stringify\"","webpack:///external \"babel-runtime/regenerator\"","webpack:///./src/handler.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","require","mongoose","SheetSchema","Schema","sheetId","String","status","url","model","load","Promise","global","isConnected","connectToDatabase","_promise2","default","resolve","connect","process","env","DB_URI","then","db","connections","readyState","_ref","_middlewares","_db","salsifyCron","_middy2","_asyncToGenerator3","_regenerator2","mark","_callee","event","context","callback","options","storedData","res","resWithId","wrap","_context","prev","next","callbackWaitsForEmptyEventLoop","SALSIFY_ORG_ID","headers","Authorization","SALSIFY_API_KEY","Content-Type","Sheet","find","sent","console","log","_isomorphicFetch2","method","exit","abrupt","length","body","_stringify2","config","json","id","create","estimated_time_remaining","findByIdAndUpdate","new","stop","undefined","_x","_x2","_x3","apply","this","arguments","use","cors","jsonBodyParser","httpErrorHandler"],"mappings":"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","file":"src/handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = require(\"envdotjs\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"mongoose\");","const mongoose = require('mongoose');\nconst SheetSchema = new mongoose.Schema({\n  sheetId: String,\n  status: String,\n  url: String\n});\nmodule.exports = mongoose.model('Sheet', SheetSchema);\n","module.exports = require(\"babel-runtime/core-js/promise\");","require('envdotjs').load();\nimport envdotjs from 'envdotjs';\nimport mongoose from 'mongoose';\nmongoose.Promise = global.Promise;\nlet isConnected;\nconst connectToDatabase = () => {\n  if (isConnected) {\n    return Promise.resolve();\n  }\n  return mongoose.connect(process.env.DB_URI).then(db => {\n    isConnected = db.connections[0].readyState;\n  });\n};\n\nmodule.exports = {\n  connectToDatabase\n};\n","module.exports = require(\"middy/middlewares\");","module.exports = require(\"middy\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"babel-runtime/regenerator\");","require('envdotjs').load();\nimport fetch from 'isomorphic-fetch';\nimport middy from 'middy';\nimport { jsonBodyParser, httpErrorHandler, cors } from 'middy/middlewares';\n\nimport { connectToDatabase } from '../utils/db';\nimport Sheet from '../models/Sheet';\nimport config from '../utils/config';\n\nmodule.exports.salsifyCron = middy(async (event, context, callback) => {\n  context.callbackWaitsForEmptyEventLoop = false;\n\n  let sheetId;\n  const options = {\n    url: `https://app.salsify.com/api/orgs/${\n      process.env.SALSIFY_ORG_ID\n    }/export_runs`,\n    headers: {\n      Authorization: `Bearer ${process.env.SALSIFY_API_KEY}`,\n      'Content-Type': 'application/json'\n    }\n  };\n  await connectToDatabase();\n\n  const storedData = await Sheet.find({});\n  if (\n    storedData[0] &&\n    storedData[0].status === 'completed' &&\n    storedData[0].url !== null\n  ) {\n    console.log(\n      'There is already a completed sheet in the DB: \\n' +\n        `Sheet ID: ${storedData[0].sheetId}, \\nSheet status: ${\n          storedData[0].status\n        }, \\nSheet url: ${storedData[0].url}`\n    );\n    await fetch(\n      'https://api.netlify.com/build_hooks/5afaedde3672df6aad36f62b',\n      {\n        method: 'POST'\n      }\n    );\n    process.exit(0);\n    return;\n  }\n  if (storedData[0]) {\n    sheetId = storedData[0].sheetId;\n  }\n  if (storedData.length === 0) {\n    const res = await fetch(options.url, {\n      method: 'POST',\n      headers: options.headers,\n      body: JSON.stringify(config)\n    }).then(res => res.json());\n    if (res.id && res.status) {\n      await Sheet.create({\n        sheetId: res.id,\n        url: null,\n        status: res.status\n      });\n      sheetId = res.id;\n    } else {\n      console.log(res);\n      process.exit(1);\n    }\n  }\n\n  const resWithId = await fetch(`${options.url}/${sheetId}`, {\n    method: 'GET',\n    headers: options.headers\n  }).then(res => res.json());\n\n  if (resWithId.status === 'running') {\n    console.log('running cron job');\n    console.log(resWithId.estimated_time_remaining);\n  }\n  if (resWithId.status === 'completed') {\n    console.log('completed cron job');\n    await Sheet.findByIdAndUpdate(\n      storedData[0],\n      { status: resWithId.status, url: resWithId.url },\n      { new: true }\n    );\n  }\n})\n  .use(cors())\n  .use(jsonBodyParser())\n  .use(httpErrorHandler());\n"],"sourceRoot":""}